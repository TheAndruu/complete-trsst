buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
    }
}
// gets built by ./gradlew war
// output in ct-webapp/build/libs
// can then do ./gradlew bootRepackage
// then run with java -jar ct-webapp/build/libs/ct-webapp-1.0.war
// ./gradlew assemble also creates both
// ./gradlew clean assemble bootRepackage also
// when deploying to tomcat, use the 'original' war!

apply plugin: 'war'
apply plugin: 'spring-boot'

// needed when multiple 'main' classes are in project
mainClassName = 'com.completetrsst.spring.Application'

repositories {
    maven { url "https://repo.spring.io/libs-release" }
}

jar {
    baseName = 'complete-trsst'
}


dependencies {
    // for embedded orient db 
    compile 'com.orientechnologies:orientdb-enterprise:2.0-M3'
    compile 'com.orientechnologies:orientdb-server:2.0-M3'
    // for orient db java api
    compile 'com.orientechnologies:orientdb-core:2.0-M3'
    compile 'com.orientechnologies:orient-commons:2.0-M1'
    // for orient lucene
    compile 'com.orientechnologies:orientdb-lucene:2.0-M3'

    // to make our app both standalone and embeddable in a container (i.e. tomcat)
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    // For spring -- removed all mvc stuff since we're not going that route
    compile 'org.springframework.boot:spring-boot-starter-web'
    // for graceful shutdown via http://localhost:8080/shutdown
    // TODO: Do without the actuator component for graceful shutdown?
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile project(':ct-core')
}
